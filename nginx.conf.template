upstream backend {
    server ${ORIGIN};
    keepalive 32;
}

server {
    listen 80;
    http2 on;
    server_name _;

    # Add DNS resolver - dynamically configured by entrypoint script
    resolver ${DNS_RESOLVER} valid=300s;
    resolver_timeout 5s;

    # Increase these if you're dealing with large requests/responses
    client_max_body_size 50M;
    client_body_buffer_size 1M;

    # Don't buffer responses - stream them
    proxy_buffering off;
    proxy_request_buffering off;

    # Basic auth
    include /etc/nginx/snippets/basic_auth.conf;

    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;

        # Forward original client info
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts - adjust based on your app's needs
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "ok\n";
        add_header Content-Type text/plain;
    }
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
